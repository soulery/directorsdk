{
    "docs": [
        {
            "location": "/", 
            "text": "Introduction\n\n\nThe Monitor Service API is built on top of SQL Server databases using\nWindows Communication Foundation (WCF) Data Services that are populated\nduring processing and consolidation.\n\n\nThe Monitor Service API uses the Open Data (OData) protocol, which is a\nWeb protocol for querying and updating data, built upon Web technologies\nsuch as HTTP.\n\n\nThe Monitor Service API is a REST-based API that can be accessed using\nan OData consumer. OData consumers are applications that consume data\nexposed using the OData protocol.\n\n\nYou can use the API to:\n\n\n\n\n\n\nAnalyze historical trends for future planning\n\n\n\n\n\n\nPerform detailed troubleshooting of connection and machine failures\n\n\n\n\n\n\nExtract information for feeding into other tools and processes; for\n    example, using Microsoft Excel's PowerPivot tables to display the\n    data in different ways\n\n\n\n\n\n\nBuild a custom user interface on top of the data that the API\n    provides\n\n\n\n\n\n\nData Available using the API\n\n\nThe following types of data are available through the Monitor Service\nAPI:\n\n\n\n\n\n\nData relating to\n    connection failures\n\n\n\n\n\n\nMachines in a failure state\n\n\n\n\n\n\nSession usage\n\n\n\n\n\n\nLogon duration\n\n\n\n\n\n\nLoad balancing data\n\n\n\n\n\n\nHotfixes applied to a machine\n\n\n\n\n\n\nHosted application usage\n\n\n\n\n\n\nFor the details of the Monitor Service schema, please refer to: \nMonitor\nService\nSchema\n.\n\n\nTo determine the values returned by the Monitor Service OData API, see:\n\nCitrix Monitor Data\nModel\n\n\nHow to Access the Monitor Service Data\n\n\nData Access Privilege\n\n\nTo use the Monitor Service OData API, you must be a XenApp or XenDesktop\nadministrator. To call the API, you require read-only privileges;\nhowever, the data returned is determined by XenApp or XenDesktop\nadministrator roles and permissions.\n\n\nFor example, Delivery Group Administrators can call the Monitor Service\nAPI but the data they can obtain is controlled by Delivery Group access\nset up using Citrix Studio.\n\n\nFor more information about XenApp or XenDesktop administrator roles and\npermissions, see\u00a0\nDelegated\nAdministration\n.\n\n\nData Access Security\n\n\nIf you choose to use SSL, you must configure SSL on all Delivery\nControllers in the site; you cannot use a mixture of SSL and non-SSL.\n\n\nTo secure Monitor Service endpoints using SSL, you must perform the\nfollowing configuration. Some steps need to be done only once per site,\nothers must be run from every machine hosting the Monitor Service in the\nsite. The steps are described below.\n\n\nPart 1: Certificate registration with the system\n\n\n\n\n\n\nCreate a certificate\n    using a trusted certificate manager. The certificate must be\n    associated with the port on the machine that you wish to use for\n    OData SSL.\n\n\n\n\n\n\nConfigure the Monitor Service to use this port for\n    SSL communication. The steps depend on your environment and how this\n    works with certificates. The following example shows how to\n    configure port 449:\n\n\n\n\n\n\nAssociate the\n    certificate with a port:\n\n\n\n\n\n\n\n\nnetsh http add sslcert ipport=0.0.0.0:449\ncerthash=97bb629e50d556c80528f4991721ad4f28fb74e9\n\n\nappid='{00000000-0000-0000-0000-000000000000}'\n\n\n\n\nTip\n:\u00a0\nIn a PowerShell command window, ensure you put single quotes\naround the GUID in the appID, as shown above, or the command will not\nwork. Note that a line break has been added to this example for\nreadability only.\n\n\nPart 2: Modify the Monitor Service configuration settings\n\n\n1.From any Delivery Controller in the site, run the following PowerShell commands once. This removes the Monitor Service registration with the Configuration Service.\n\n\nasnp citrix.\\*\n\n\n\n \\\n$\nserviceGroup\n = get-configregisteredserviceinstance -servicetype\n\n\n Monitor | Select -First 1 ServiceGroupUid\n\n\n\n remove-configserviceGroup -ServiceGroupUid\n\n\n \\\n$\nserviceGroup\n.\nServiceGroupUid\n\n\n\n\n\n\n2.Do the following on all Controllers in the site:\n\n\n\n\nUsing a cmd prompt, locate the installed Citrix Monitor directory (typically in C:\\Program Files\\Citrix\\Monitor\\Service). Within that directory run:\n\n\n\n\nCitrix.Monitor.Exe -CONFIGUREFIREWALL -ODataPort 449 -RequireODataSsl\n\n\n\n\n\n\n\nRun the following PowerShell commands:\n\n\n\n\nasnp citrix.\\* (if not already run within this window)\n\nget-MonitorServiceInstance | register-ConfigServiceInstance\n\nGet-ConfigRegisteredServiceInstance -ServiceType Config |\nReset-MonitorServiceGroupMembership\n\n\n\n\n\nData Access Protocol\n\n\nThe Monitor Service API is a REST-based API that can be accessed using\nan OData consumer. OData consumers are applications that consume data\nexposed using the OData protocol. OData consumers vary in sophistication\nfrom simple web browsers to custom applications that can take advantage\nof all the features of the OData Protocol.\n\n\nEvery part of the Monitor Service data model is accessible and can be\nfiltered on the URL. OData provides a query language in the URL format\nyou can use to retrieve entries from a service.\n\n\nThe query is processed on the server side and can be filtered further\nusing the OData protocol on the client side.\n\n\nThe data modeled falls\ninto three categories: aggregate data (the summary tables), current\nstate of objects (machines, sessions, etc.), and log data, which is\nreally historical events (connections, for example).\n\n\nNote\n:\u00a0Enums are not\nsupported in the OData protocol; integers are used in their place. To\ndetermine the values returned by the Monitor Service OData API,\nsee\n\u00a0\nMonitor Service Data\nModel\n .\n\n\nWhat is OData Protocol?\n\n\nOData\n (Open Data Protocol) is an\u00a0\nOASIS\nstandard\n\u00a0that\ndefines a set of best practices for building and consuming RESTful APIs.\nOData helps you focus on your business logic while building RESTful APIs\nwithout having to worry about the various approaches to define request\nand response headers, status codes, HTTP methods, URL conventions, media\ntypes, payload formats, query options, etc.\n\n\nOData also provides guidance for tracking changes, defining\nfunctions/actions for reusable procedures, and sending\nasynchronous/batch requests.\n\n\nOData RESTful APIs are easy to consume. The OData metadata, a\nmachine-readable description of the data model of the APIs, enables the\ncreation of powerful generic client proxies and tools.\n\n\nOData Consumers: \nhttp://www.odata.org/ecosystem/#consumers\n\n\nClient Libraries: \nhttp://www.odata.org/libraries/\n\n\nBasic Tutorial: \nhttp://www.odata.org/getting-started/basic-tutorial/\n\n\n\n\nWhat is WCF?\n\n\nAs OData Provider, Citrix Monitor Service API is implemented by WCF.\n\n\nWindows Communication Foundation (WCF) is Microsoft\u2019s unified\nprogramming model for building service-oriented applications.\u00a0\n\n\nFor more detail about WCF, see \nWindows Communication\nFoundation\n\n\nExamples\n\n\nThe following examples show how to export Monitor Service data using the\nOData API. This topic also provides a list of URLs for available data\nsets.\n\n\nExample 1 - Raw XML\n\n\n\n\n\n\nPlace the URL for each data set into a web browser that is running\n    with the appropriate administrative permissions for the XenApp or\n    XenDesktop Site. Citrix recommends using the Chrome browser with the\n    Advanced Rest Client add-in.\n\n\n\n\n\n\nView the source.\n\n\n\n\n\n\nExample 2 - PowerPivot with Excel\n\n\n\n\n\n\nInstall Microsoft Excel.\n\n\n\n\n\n\nFollow the instructions here to install PowerPivot (depending on\n    whether or not you are using 2010 or\n    2013):\u00a0\nhttps://support.office.com/en-us/article/Start-Power-Pivot-in-Microsoft-Excel-2013-add-in-a891a66d-36e3-43fc-81e8-fc4798f39ea8.\n\n\n\n\n\n\nOpen Excel (running with the appropriate administrative permissions\n    for the XenApp or XenDesktop Site).\n\n\n\n\n\n\nUsing Excel 2010\n\n\n\n\n\n\nClick the PowerPivot tab.\n\n\n\n\n\n\nClick PowerPivot Window.\n\n\n\n\n\n\nClick\u00a0\nFrom Data Feeds\n\u00a0in the ribbon.\n\n\n\n\n\n\nChoose a Friendly Connection Name (for example: XenDesktop\n    Monitoring Data) and enter the data feed url:\n    http://{dc-host}/Citrix/Monitor/OData/v1/Data (or https: if you are\n    using SSL).\n\n\n\n\n\n\nClick\u00a0\nNext\n.\n\n\n\n\n\n\nSelect the tables you want to import into Excel and\n    click\u00a0\nFinish\n. The data is retrieved.\n\n\n\n\n\n\nUsing Excel 2013\n\n\n\n\n\n\nClick the Data tab.\n\n\n\n\n\n\nChoose From Other Sources \n From OData Data Feed\n\n\n\n\n\n\nEnter the data feed url:\n    http://{dc-host}/Citrix/Monitor/OData/v1/Data (or https: if you are\n    using SSL) and click\u00a0\nNext\n.\n\n\n\n\n\n\nSelect the tables you want to import into Excel and click\u00a0\nNext\n.\n\n\n\n\n\n\nAccept name defaults or customize names and click\u00a0\nFinish\n.\n\n\n\n\n\n\nChoose\u00a0\nConnection Only\n\u00a0or\u00a0\nPivot Report\n. The data\n    is retrieved.\n\n\n\n\n\n\nYou can now use PowerPivot to view and analyze the data with PivotTables\nand PivotCharts. For more information, see the Learning\nCenter:\u00a0\nhttp://www.microsoft.com/en-us/bi/LearningCenter.aspx\n\n\nExample 3 - LinqPad\n\n\n\n\n\n\nDownload and\n    install the latest version of LinqPad\n    from\u00a0\nhttp://www.linqpad.net\n.\n\n\n\n\n\n\nRun LinqPad with the appropriate administrative permissions for the\n    XenApp or XenDesktop Site.\n\n\n\n\n\n\n\n\nTip:\u00a0the easiest way is to download, install and run on the Delivery\nController.\n\n\n\n\n\n\n\n\nClick the Add connection link.\n\n\n\n\n\n\nChoose WCF Data Services 5.1 (OData 3) and click\u00a0\nNext\n.\n\n\n\n\n\n\nEnter the data feed URL: \nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data\n    (or https: if you are using SSL). If necessary, enter the username\n    and password to access the Delivery Controller. Click\u00a0\nOK\n.\n\n\n\n\n\n\nYou can now run LINQ queries against the data feed and export the\n    data as needed. For example, right-click Catalogs and\n    choose\u00a0\nCatalogs.Take(100)\n. This returns the first 100 Catalogs\n    in the database. Choose Export\nExport to Excel with formatting.\n\n\n\n\n\n\nExample 4 \u2013 Client Library\n\n\n\n\nCurrently Citrix Monitor Service supports OData protocol V1-V3. So when\nimplement the OData consumers with various programming platforms, please\nselect correct client libraries.\n\n\nExample 4.1 \u2013 C#/.NET\n\n\nCalling an OData Service From a .NET Client\u00a0(C#)\n\n\nhttps://www.asp.net/web-api/overview/odata-support-in-aspnet-web-api/odata-v3/calling-an-odata-service-from-a-net-client\n\n\nCode Fragment:\n\n\n\n    \n/* GET http://{dc-host}/Citrix/Monitor/Odata/v3/Data/Catalogs */\n\n    \nprivate\n \nstatic\n \nstring\n \nListAllCatalgs\n(\nMonitorService\n.\nDatabaseContext\n \ncontext\n)\n\n    \n{\n\n        \nStringBuilder\n \nsb\n \n=\n \nnew\n \nStringBuilder\n();\n\n        \nForeach\n \n(\nvar\n \nc\n \nin\n \ncontext\n.\nCatalogs\n)\n\n        \n{\n\n            \nsb\n.\nAppend\n(\nDisplayCatalog\n(\nc\n));\n\n        \n}\n\n        \nreturn\n \nsb\n.\nToString\n();\n\n    \n}\n\n\n\n\n\n\n\n\n    \n/* GET http://Url/Machines()?$select=Name, IPAddress */\n\n    \nprivate\n \nstatic\n \nvoid\n \nListMachineNames\n(\nMonitorService\n.\nDatabaseContext\n \ncontext\n)\n\n    \n{\n\n        \nvar\n \nmachines\n \n=\n \nfrom\n \nm\n \nin\n \ncontext\n.\nMachines\n \nselect\n \nnew\n \n{\n \nName\n \n=\n \nm\n.\nName\n,\n \nIP\n \n=\n \nm\n.\nIPAddress\n \n};\n\n        \nforeach\n \n(\nvar\n \nm\n \nin\n \nmachines\n)\n\n        \n{\n\n            \nif\n \n(\nm\n.\nName\n \n!=\n \nnull\n \n \nm\n.\nIP\n \n!=\n \nnull\n)\n\n            \n{\n\n                \nConsole\n.\nWriteLine\n(\n{0} : {1}\n,\n \nm\n.\nName\n,\n \nm\n.\nIP\n);\n\n            \n}\n\n        \n}\n\n    \n}\n\n\n\n\n\n\n\n\n    \n/* use the LINQ Skip and Take methods to skips the first 40 results and takes the next 10 */\n\n    \n/* GET http://{dc-host}/Citrix/Monitor/Odata/v3/Machines()?$orderby=Id desc\n$skip=40\n$top=10 */\n\n    \nprivate\n \nstatic\n \nvoid\n \nListMachinesPaged\n(\nMonitorService\n.\nDatabaseContext\n \ncontext\n)\n\n    \n{\n\n        \nvar\n \nmachines\n \n=\n\n            \n(\nfrom\n \nm\n \nin\n \ncontext\n.\nMachines\n\n             \norderby\n \nm\n.\nId\n \ndescending\n\n             \nselect\n \nm\n).\nSkip\n(\n40\n).\nTake\n(\n10\n);\n\n\n        \nforeach\n \n(\nvar\n \nm\n \nin\n \nmachines\n)\n\n        \n{\n\n            \nConsole\n.\nWriteLine\n(\n{0}, {1}\n,\n \nm\n.\nName\n,\n \nm\n.\nIPAddress\n);\n\n        \n}\n\n    \n}\n\n\n\n\n\n\n \n\n\n    \n/* GET http://Url/Catalogs()?$filter=Name eq \n$Name\n*/\n\n    \nprivate\n \nstatic\n \nvoid\n \nListCatalogByName\n(\nMonitorService\n.\nDatabaseContext\n \ncontext\n,\n \nstring\n \nname\n)\n\n    \n{\n\n        \nvar\n \ncatalog\n \n=\n \ncontext\n.\nCatalogs\n.\nWhere\n(\nc\n \n=\n \nc\n.\nName\n \n==\n \nname\n).\nSingleOrDefault\n();\n\n        \nif\n \n(\ncatalog\n \n!=\n \nnull\n)\n\n        \n{\n\n            \nDisplayCatalog\n(\ncatalog\n);\n\n        \n}\n\n    \n}\n\n\n\n\n\n\n  \n\n\nExample 4.2 \u2013 JavaScript\n\n\nTODO\n\n\nExample 4.3 \u2013 Java\n\n\nTODO\n\n\nExample 4.4 \u2013 Object-C\n\n\nTODO\n\n\nAppendix:\n\n\nURLs for Available Data Sets\n\n\nURL\nDescription\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/Catalogs\nCatalog images in the site\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/ConnectionFailureCategories\nGrouping for connection failure types\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/ConnectionFailureLogs\nLog of each connection failure in the site\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/Connections\nRepresents an initial connection or reconnect for a session\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/DesktopGroups\nDelivery Groups in the site\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/FailureLogSummaries\nFailures (connection/machine) counts by time period and Delivery Group\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/Hypervisors\nHosts (hypervisors) in the site\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/LoadIndexes\nLoad Index data received from the Virtual Delivery Agent (VDA)\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/LoadIndexSummaries\nLoad Index averages by time period and machine\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/MachineFailureLogs\nLog of each machine failure by start and end date in the site\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/Machines\nMachines in the site\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/SessionActivitySummaries\nSession counts and logon data by time period and delivery group\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/Sessions\nRepresents a user connected to a desktop\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/TaskLogs\nLog of all tasks and their status that have been run as part of the internal Monitoring Service\nhttp://{dc-host}/Citrix/Monitor/OData/v1/Data/Users\nUsers that have launched a session in the site", 
            "title": "Index"
        }, 
        {
            "location": "/#introduction", 
            "text": "The Monitor Service API is built on top of SQL Server databases using\nWindows Communication Foundation (WCF) Data Services that are populated\nduring processing and consolidation.  The Monitor Service API uses the Open Data (OData) protocol, which is a\nWeb protocol for querying and updating data, built upon Web technologies\nsuch as HTTP.  The Monitor Service API is a REST-based API that can be accessed using\nan OData consumer. OData consumers are applications that consume data\nexposed using the OData protocol.  You can use the API to:    Analyze historical trends for future planning    Perform detailed troubleshooting of connection and machine failures    Extract information for feeding into other tools and processes; for\n    example, using Microsoft Excel's PowerPivot tables to display the\n    data in different ways    Build a custom user interface on top of the data that the API\n    provides", 
            "title": "Introduction"
        }, 
        {
            "location": "/#data-available-using-the-api", 
            "text": "The following types of data are available through the Monitor Service\nAPI:    Data relating to\n    connection failures    Machines in a failure state    Session usage    Logon duration    Load balancing data    Hotfixes applied to a machine    Hosted application usage    For the details of the Monitor Service schema, please refer to:  Monitor\nService\nSchema .  To determine the values returned by the Monitor Service OData API, see: Citrix Monitor Data\nModel", 
            "title": "Data Available using the API"
        }, 
        {
            "location": "/#how-to-access-the-monitor-service-data", 
            "text": "", 
            "title": "How to Access the Monitor Service Data"
        }, 
        {
            "location": "/#data-access-privilege", 
            "text": "To use the Monitor Service OData API, you must be a XenApp or XenDesktop\nadministrator. To call the API, you require read-only privileges;\nhowever, the data returned is determined by XenApp or XenDesktop\nadministrator roles and permissions.  For example, Delivery Group Administrators can call the Monitor Service\nAPI but the data they can obtain is controlled by Delivery Group access\nset up using Citrix Studio.  For more information about XenApp or XenDesktop administrator roles and\npermissions, see\u00a0 Delegated\nAdministration .", 
            "title": "Data Access Privilege"
        }, 
        {
            "location": "/#data-access-security", 
            "text": "If you choose to use SSL, you must configure SSL on all Delivery\nControllers in the site; you cannot use a mixture of SSL and non-SSL.  To secure Monitor Service endpoints using SSL, you must perform the\nfollowing configuration. Some steps need to be done only once per site,\nothers must be run from every machine hosting the Monitor Service in the\nsite. The steps are described below.", 
            "title": "Data Access Security"
        }, 
        {
            "location": "/#part-1-certificate-registration-with-the-system", 
            "text": "Create a certificate\n    using a trusted certificate manager. The certificate must be\n    associated with the port on the machine that you wish to use for\n    OData SSL.    Configure the Monitor Service to use this port for\n    SSL communication. The steps depend on your environment and how this\n    works with certificates. The following example shows how to\n    configure port 449:    Associate the\n    certificate with a port:     netsh http add sslcert ipport=0.0.0.0:449\ncerthash=97bb629e50d556c80528f4991721ad4f28fb74e9  appid='{00000000-0000-0000-0000-000000000000}'   Tip :\u00a0 In a PowerShell command window, ensure you put single quotes\naround the GUID in the appID, as shown above, or the command will not\nwork. Note that a line break has been added to this example for\nreadability only.", 
            "title": "Part 1: Certificate registration with the system"
        }, 
        {
            "location": "/#part-2-modify-the-monitor-service-configuration-settings", 
            "text": "1.From any Delivery Controller in the site, run the following PowerShell commands once. This removes the Monitor Service registration with the Configuration Service.  asnp citrix.\\*   \\ $ serviceGroup  = get-configregisteredserviceinstance -servicetype   Monitor | Select -First 1 ServiceGroupUid   remove-configserviceGroup -ServiceGroupUid   \\ $ serviceGroup . ServiceGroupUid   2.Do the following on all Controllers in the site:   Using a cmd prompt, locate the installed Citrix Monitor directory (typically in C:\\Program Files\\Citrix\\Monitor\\Service). Within that directory run:   Citrix.Monitor.Exe -CONFIGUREFIREWALL -ODataPort 449 -RequireODataSsl   Run the following PowerShell commands:   asnp citrix.\\* (if not already run within this window)\n\nget-MonitorServiceInstance | register-ConfigServiceInstance\n\nGet-ConfigRegisteredServiceInstance -ServiceType Config |\nReset-MonitorServiceGroupMembership", 
            "title": "Part 2: Modify the Monitor Service configuration settings"
        }, 
        {
            "location": "/#data-access-protocol", 
            "text": "The Monitor Service API is a REST-based API that can be accessed using\nan OData consumer. OData consumers are applications that consume data\nexposed using the OData protocol. OData consumers vary in sophistication\nfrom simple web browsers to custom applications that can take advantage\nof all the features of the OData Protocol.  Every part of the Monitor Service data model is accessible and can be\nfiltered on the URL. OData provides a query language in the URL format\nyou can use to retrieve entries from a service.  The query is processed on the server side and can be filtered further\nusing the OData protocol on the client side.  The data modeled falls\ninto three categories: aggregate data (the summary tables), current\nstate of objects (machines, sessions, etc.), and log data, which is\nreally historical events (connections, for example).  Note :\u00a0Enums are not\nsupported in the OData protocol; integers are used in their place. To\ndetermine the values returned by the Monitor Service OData API,\nsee \u00a0 Monitor Service Data\nModel  .", 
            "title": "Data Access Protocol"
        }, 
        {
            "location": "/#what-is-odata-protocol", 
            "text": "OData  (Open Data Protocol) is an\u00a0 OASIS\nstandard \u00a0that\ndefines a set of best practices for building and consuming RESTful APIs.\nOData helps you focus on your business logic while building RESTful APIs\nwithout having to worry about the various approaches to define request\nand response headers, status codes, HTTP methods, URL conventions, media\ntypes, payload formats, query options, etc.  OData also provides guidance for tracking changes, defining\nfunctions/actions for reusable procedures, and sending\nasynchronous/batch requests.  OData RESTful APIs are easy to consume. The OData metadata, a\nmachine-readable description of the data model of the APIs, enables the\ncreation of powerful generic client proxies and tools.  OData Consumers:  http://www.odata.org/ecosystem/#consumers  Client Libraries:  http://www.odata.org/libraries/  Basic Tutorial:  http://www.odata.org/getting-started/basic-tutorial/", 
            "title": "What is OData Protocol?"
        }, 
        {
            "location": "/#what-is-wcf", 
            "text": "As OData Provider, Citrix Monitor Service API is implemented by WCF.  Windows Communication Foundation (WCF) is Microsoft\u2019s unified\nprogramming model for building service-oriented applications.\u00a0  For more detail about WCF, see  Windows Communication\nFoundation", 
            "title": "What is WCF?"
        }, 
        {
            "location": "/#examples", 
            "text": "The following examples show how to export Monitor Service data using the\nOData API. This topic also provides a list of URLs for available data\nsets.", 
            "title": "Examples"
        }, 
        {
            "location": "/#example-1-raw-xml", 
            "text": "Place the URL for each data set into a web browser that is running\n    with the appropriate administrative permissions for the XenApp or\n    XenDesktop Site. Citrix recommends using the Chrome browser with the\n    Advanced Rest Client add-in.    View the source.", 
            "title": "Example 1 - Raw XML"
        }, 
        {
            "location": "/#example-2-powerpivot-with-excel", 
            "text": "Install Microsoft Excel.    Follow the instructions here to install PowerPivot (depending on\n    whether or not you are using 2010 or\n    2013):\u00a0 https://support.office.com/en-us/article/Start-Power-Pivot-in-Microsoft-Excel-2013-add-in-a891a66d-36e3-43fc-81e8-fc4798f39ea8.    Open Excel (running with the appropriate administrative permissions\n    for the XenApp or XenDesktop Site).", 
            "title": "Example 2 - PowerPivot with Excel"
        }, 
        {
            "location": "/#using-excel-2010", 
            "text": "Click the PowerPivot tab.    Click PowerPivot Window.    Click\u00a0 From Data Feeds \u00a0in the ribbon.    Choose a Friendly Connection Name (for example: XenDesktop\n    Monitoring Data) and enter the data feed url:\n    http://{dc-host}/Citrix/Monitor/OData/v1/Data (or https: if you are\n    using SSL).    Click\u00a0 Next .    Select the tables you want to import into Excel and\n    click\u00a0 Finish . The data is retrieved.", 
            "title": "Using Excel 2010"
        }, 
        {
            "location": "/#using-excel-2013", 
            "text": "Click the Data tab.    Choose From Other Sources   From OData Data Feed    Enter the data feed url:\n    http://{dc-host}/Citrix/Monitor/OData/v1/Data (or https: if you are\n    using SSL) and click\u00a0 Next .    Select the tables you want to import into Excel and click\u00a0 Next .    Accept name defaults or customize names and click\u00a0 Finish .    Choose\u00a0 Connection Only \u00a0or\u00a0 Pivot Report . The data\n    is retrieved.    You can now use PowerPivot to view and analyze the data with PivotTables\nand PivotCharts. For more information, see the Learning\nCenter:\u00a0 http://www.microsoft.com/en-us/bi/LearningCenter.aspx", 
            "title": "Using Excel 2013"
        }, 
        {
            "location": "/#example-3-linqpad", 
            "text": "Download and\n    install the latest version of LinqPad\n    from\u00a0 http://www.linqpad.net .    Run LinqPad with the appropriate administrative permissions for the\n    XenApp or XenDesktop Site.     Tip:\u00a0the easiest way is to download, install and run on the Delivery\nController.     Click the Add connection link.    Choose WCF Data Services 5.1 (OData 3) and click\u00a0 Next .    Enter the data feed URL:  http://{dc-host}/Citrix/Monitor/OData/v1/Data\n    (or https: if you are using SSL). If necessary, enter the username\n    and password to access the Delivery Controller. Click\u00a0 OK .    You can now run LINQ queries against the data feed and export the\n    data as needed. For example, right-click Catalogs and\n    choose\u00a0 Catalogs.Take(100) . This returns the first 100 Catalogs\n    in the database. Choose Export Export to Excel with formatting.", 
            "title": "Example 3 - LinqPad"
        }, 
        {
            "location": "/#example-4-client-library", 
            "text": "", 
            "title": "Example 4 \u2013 Client Library"
        }, 
        {
            "location": "/#example-41-c35net", 
            "text": "", 
            "title": "Example 4.1 \u2013 C#/.NET"
        }, 
        {
            "location": "/#calling-an-odata-service-from-a-net-client-c35", 
            "text": "https://www.asp.net/web-api/overview/odata-support-in-aspnet-web-api/odata-v3/calling-an-odata-service-from-a-net-client  Code Fragment:       /* GET http://{dc-host}/Citrix/Monitor/Odata/v3/Data/Catalogs */ \n     private   static   string   ListAllCatalgs ( MonitorService . DatabaseContext   context ) \n     { \n         StringBuilder   sb   =   new   StringBuilder (); \n         Foreach   ( var   c   in   context . Catalogs ) \n         { \n             sb . Append ( DisplayCatalog ( c )); \n         } \n         return   sb . ToString (); \n     }         /* GET http://Url/Machines()?$select=Name, IPAddress */ \n     private   static   void   ListMachineNames ( MonitorService . DatabaseContext   context ) \n     { \n         var   machines   =   from   m   in   context . Machines   select   new   {   Name   =   m . Name ,   IP   =   m . IPAddress   }; \n         foreach   ( var   m   in   machines ) \n         { \n             if   ( m . Name   !=   null     m . IP   !=   null ) \n             { \n                 Console . WriteLine ( {0} : {1} ,   m . Name ,   m . IP ); \n             } \n         } \n     }         /* use the LINQ Skip and Take methods to skips the first 40 results and takes the next 10 */ \n     /* GET http://{dc-host}/Citrix/Monitor/Odata/v3/Machines()?$orderby=Id desc $skip=40 $top=10 */ \n     private   static   void   ListMachinesPaged ( MonitorService . DatabaseContext   context ) \n     { \n         var   machines   = \n             ( from   m   in   context . Machines \n              orderby   m . Id   descending \n              select   m ). Skip ( 40 ). Take ( 10 ); \n\n         foreach   ( var   m   in   machines ) \n         { \n             Console . WriteLine ( {0}, {1} ,   m . Name ,   m . IPAddress ); \n         } \n     }           /* GET http://Url/Catalogs()?$filter=Name eq  $Name */ \n     private   static   void   ListCatalogByName ( MonitorService . DatabaseContext   context ,   string   name ) \n     { \n         var   catalog   =   context . Catalogs . Where ( c   =   c . Name   ==   name ). SingleOrDefault (); \n         if   ( catalog   !=   null ) \n         { \n             DisplayCatalog ( catalog ); \n         } \n     }", 
            "title": "Calling an OData Service From a .NET Client\u00a0(C#)"
        }, 
        {
            "location": "/#example-42-javascript", 
            "text": "TODO", 
            "title": "Example 4.2 \u2013 JavaScript"
        }, 
        {
            "location": "/#example-43-java", 
            "text": "TODO", 
            "title": "Example 4.3 \u2013 Java"
        }, 
        {
            "location": "/#example-44-object-c", 
            "text": "TODO", 
            "title": "Example 4.4 \u2013 Object-C"
        }, 
        {
            "location": "/#appendix", 
            "text": "", 
            "title": "Appendix:"
        }, 
        {
            "location": "/#urls-for-available-data-sets", 
            "text": "URL Description http://{dc-host}/Citrix/Monitor/OData/v1/Data/Catalogs Catalog images in the site http://{dc-host}/Citrix/Monitor/OData/v1/Data/ConnectionFailureCategories Grouping for connection failure types http://{dc-host}/Citrix/Monitor/OData/v1/Data/ConnectionFailureLogs Log of each connection failure in the site http://{dc-host}/Citrix/Monitor/OData/v1/Data/Connections Represents an initial connection or reconnect for a session http://{dc-host}/Citrix/Monitor/OData/v1/Data/DesktopGroups Delivery Groups in the site http://{dc-host}/Citrix/Monitor/OData/v1/Data/FailureLogSummaries Failures (connection/machine) counts by time period and Delivery Group http://{dc-host}/Citrix/Monitor/OData/v1/Data/Hypervisors Hosts (hypervisors) in the site http://{dc-host}/Citrix/Monitor/OData/v1/Data/LoadIndexes Load Index data received from the Virtual Delivery Agent (VDA) http://{dc-host}/Citrix/Monitor/OData/v1/Data/LoadIndexSummaries Load Index averages by time period and machine http://{dc-host}/Citrix/Monitor/OData/v1/Data/MachineFailureLogs Log of each machine failure by start and end date in the site http://{dc-host}/Citrix/Monitor/OData/v1/Data/Machines Machines in the site http://{dc-host}/Citrix/Monitor/OData/v1/Data/SessionActivitySummaries Session counts and logon data by time period and delivery group http://{dc-host}/Citrix/Monitor/OData/v1/Data/Sessions Represents a user connected to a desktop http://{dc-host}/Citrix/Monitor/OData/v1/Data/TaskLogs Log of all tasks and their status that have been run as part of the internal Monitoring Service http://{dc-host}/Citrix/Monitor/OData/v1/Data/Users Users that have launched a session in the site", 
            "title": "URLs for Available Data Sets"
        }
    ]
}